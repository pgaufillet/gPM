queryOnCats1 = select valuesContainer.id from SheetImpl valuesContainer , StringValueImpl field_2, SimpleFieldValueImpl simpleForOrder_2 , StringValueImpl field_3, SimpleFieldValueImpl simpleForOrder_3 where ( valuesContainer.definition.id in (
queryOnCats2 = ) ) and (((valuesContainer.id in (select choiceFieldValue_0.container.id from ChoiceFieldValueImpl as choiceFieldValue_0 inner join choiceFieldValue_0.categoryValues as categoryValue_0 where choiceFieldValue_0.field.labelKey like 'CAT_color' and categoryValue_0.value like '%BLACK%')))  and (valuesContainer.id in (select container.id from SimpleFieldValueImpl as simpleFieldValue_1 where simpleFieldValue_1.field.labelKey like 'CAT_description' and simpleFieldValue_1.scalarValue.id in (select id from StringValueImpl where stringValue like '%'))) ) and ((simpleForOrder_2.container.id = valuesContainer.id and simpleForOrder_2.field.labelKey like 'CAT_ref' and field_2.id = simpleForOrder_2.scalarValue.id )  and (simpleForOrder_3.container.id = valuesContainer.id and simpleForOrder_3.field.labelKey like 'CAT_description' and field_3.id = simpleForOrder_3.scalarValue.id ) ) )  order by field_2.stringValue asc , field_3.stringValue asc
queryOnProduct1 = select valuesContainer.id from ProductImpl valuesContainer where ( valuesContainer.definition.id in (
queryOnProduct2 = ))

query1_1 = SELECT valuesContainer.id FROM SheetImpl valuesContainer left join valuesContainer.lock as contLock , StringValueImpl field_4, SimpleFieldValueImpl simpleForOrder_4, ChoiceFieldValueImpl choiceForOrder_5 left join  choiceForOrder_5.categoryValues as field_5 , StringValueImpl field_6, SimpleFieldValueImpl simpleForOrder_6  WHERE (( valuesContainer.definition.id in (
query1_2 = ) ) and ((contLock is null or contLock.lockType != :readWrite) or (contLock.owner = :userLogin ) or ( exists ( from org.topcased.gpm.domain.accesscontrol.EndUser user,org.topcased.gpm.domain.accesscontrol.Role role where (user.login = :userLogin and (role in elements(user.adminRoles)) and  role.name='admin')))) ) and (((valuesContainer.id in (select choiceFieldValue_0.container.id from ChoiceFieldValueImpl as choiceFieldValue_0 left join choiceFieldValue_0.categoryValues as categoryValue_0 where choiceFieldValue_0.field.labelKey = 'CAT_color' and (categoryValue_0.value = :choice_0)))  and (valuesContainer.id in (select container.id from SimpleFieldValueImpl as simpleFieldValue_1 where simpleFieldValue_1.field.labelKey = 'CAT_description' and simpleFieldValue_1.scalarValue.stringValue like :string_1))  and (valuesContainer.id in (select container.id from SimpleFieldValueImpl as simpleFieldValue_2 where simpleFieldValue_2.field.labelKey = 'CAT_birthdate' and simpleFieldValue_2.scalarValue.dateValue = :date_2))  and (valuesContainer.id in (select container.id from AttachedFieldValueImpl as attachedFieldValue_3 where attachedFieldValue_3.field.labelKey = 'CAT_picture' and attachedFieldValue_3.name = :attached_3)) ) and ((simpleForOrder_4.container.id = valuesContainer.id and simpleForOrder_4.field.labelKey = 'CAT_ref' and field_4.id = simpleForOrder_4.scalarValue.id )  and (choiceForOrder_5.container.id = valuesContainer.id and choiceForOrder_5.field.labelKey = 'CAT_color' )  and (simpleForOrder_6.container.id = valuesContainer.id and simpleForOrder_6.field.labelKey = 'CAT_description' and field_6.id = simpleForOrder_6.scalarValue.id ) ) )  ORDER BY field_4.stringValue asc, field_5.value  desc, field_6.stringValue asc
query2_1 = SELECT valuesContainer.id FROM SheetImpl valuesContainer left join valuesContainer.lock as contLock , StringValueImpl field_2, SimpleFieldValueImpl simpleForOrder_2, RealValueImpl field_3, SimpleFieldValueImpl simpleForOrder_3  WHERE (( valuesContainer.definition.id in (
query2_2 = ) ) and ((contLock is null or contLock.lockType != :readWrite) or (contLock.owner = :userLogin ) or ( exists ( from org.topcased.gpm.domain.accesscontrol.EndUser user,org.topcased.gpm.domain.accesscontrol.Role role where (user.login = :userLogin and (role in elements(user.adminRoles)) and  role.name='admin')))) ) and (((valuesContainer.id in (select container.id from SimpleFieldValueImpl as simpleFieldValue_0 where simpleFieldValue_0.field.labelKey = 'PRICE_ref' and simpleFieldValue_0.scalarValue.stringValue like :string_0))  and (valuesContainer.id in (select container.id from SimpleFieldValueImpl as simpleFieldValue_1 where simpleFieldValue_1.field.labelKey = 'PRICE_price' and simpleFieldValue_1.scalarValue.realValue > :real_1)) ) and ((simpleForOrder_2.container.id = valuesContainer.id and simpleForOrder_2.field.labelKey = 'PRICE_ref' and field_2.id = simpleForOrder_2.scalarValue.id )  and (simpleForOrder_3.container.id = valuesContainer.id and simpleForOrder_3.field.labelKey = 'PRICE_price' and field_3.id = simpleForOrder_3.scalarValue.id ) ) )  ORDER BY field_2.stringValue asc, field_3.realValue desc
query3_1 = SELECT valuesContainer.id FROM SheetImpl valuesContainer left join valuesContainer.lock as contLock , StringValueImpl field_0, SimpleFieldValueImpl simpleForOrder_0, RealValueImpl field_1, SimpleFieldValueImpl simpleForOrder_1  WHERE (( valuesContainer.definition.id in (
query3_2 = ) ) and ((contLock is null or contLock.lockType != :readWrite) or (contLock.owner = :userLogin ) or ( exists ( from org.topcased.gpm.domain.accesscontrol.EndUser user,org.topcased.gpm.domain.accesscontrol.Role role where (user.login = :userLogin and (role in elements(user.adminRoles)) and  role.name='admin')))) ) and ((simpleForOrder_0.container.id = valuesContainer.id and simpleForOrder_0.field.labelKey = 'PRICE_ref' and field_0.id = simpleForOrder_0.scalarValue.id )  and (simpleForOrder_1.container.id = valuesContainer.id and simpleForOrder_1.field.labelKey = 'PRICE_price' and field_1.id = simpleForOrder_1.scalarValue.id ) )  ORDER BY field_0.stringValue asc, field_1.realValue desc

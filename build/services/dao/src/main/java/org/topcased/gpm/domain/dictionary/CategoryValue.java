/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.dictionary;

/**
 * @author Atos
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "CATEGORY_VALUE")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class CategoryValue implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = -8657622652985966932L;

    protected java.lang.String value;

    /**
     * 
     */
    @javax.persistence.Column(name = "VALUE", length = 100, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getValue() {
        return this.value;
    }

    public void setValue(java.lang.String pValue) {
        this.value = pValue;
    }

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected org.topcased.gpm.domain.dictionary.Category category;

    /**
     * 
     */
    @javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.dictionary.Category.class)
    @javax.persistence.JoinColumn(insertable = false, updatable = false, name = "CATEGORY_FK")
    @org.hibernate.annotations.ForeignKey(name = "CATEGORY_VALUE_CATEGORY_FKC")
    public org.topcased.gpm.domain.dictionary.Category getCategory() {
        return this.category;
    }

    public void setCategory(
            org.topcased.gpm.domain.dictionary.Category pCategory) {
        this.category = pCategory;
    }

    protected java.util.Set<org.topcased.gpm.domain.dictionary.Environment> environmentList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.dictionary.Environment>();

    /**
     * 
     */
    @javax.persistence.ManyToMany(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.dictionary.Environment.class)
    @javax.persistence.JoinTable(name = "CATEGORY_VALUES2ENVIRONMENTS", joinColumns = @javax.persistence.JoinColumn(name = "CATEGORY_VALUES_FK"), inverseJoinColumns = @javax.persistence.JoinColumn(name = "ENVIRONMENTS_FK"))
    @org.hibernate.annotations.OrderBy(clause = "CATEGORY_VALUES_FK")
    @org.hibernate.annotations.ForeignKey(inverseName = "ENVIRONMENT_CATEGORY_VALUES_FK", name = "CATEGORY_VALUE_ENVIRONMENTS_FK")
    public java.util.Set<org.topcased.gpm.domain.dictionary.Environment> getEnvironments() {
        return this.environmentList;
    }

    public void setEnvironments(
            java.util.Set<org.topcased.gpm.domain.dictionary.Environment> pEnvironments) {
        this.environmentList = pEnvironments;
    }

    /**
     * Add a org.topcased.gpm.domain.dictionary.Environment.
     * 
     * @param pEnvironments
     *            the entity to add.
     */
    public void addToEnvironmentList(
            org.topcased.gpm.domain.dictionary.Environment pEnvironments) {
        if (this.environmentList == null) {
            this.environmentList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.dictionary.Environment>();
        }
        this.environmentList.add(pEnvironments);
    }

    /**
     * Remove a org.topcased.gpm.domain.dictionary.Environment.
     * 
     * @param pEnvironments
     *            the entity to remove.
     */
    public void removeFromEnvironmentList(
            org.topcased.gpm.domain.dictionary.Environment pEnvironments) {
        if (this.environmentList != null) {
            this.environmentList.remove(pEnvironments);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an CategoryValue instance
     * and all identifiers for this entity equal the identifiers of the argument
     * entity. Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof CategoryValue)) {
            return false;
        }
        final CategoryValue lCategoryValue = (CategoryValue) pObject;
        if (this.getId() == null || lCategoryValue.getId() == null
                || !lCategoryValue.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.dictionary.CategoryValue}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.dictionary.CategoryValue}
     */
    public static org.topcased.gpm.domain.dictionary.CategoryValue newInstance() {
        return new org.topcased.gpm.domain.dictionary.CategoryValue();
    }

    // HibernateEntity.vsl merge-point
}

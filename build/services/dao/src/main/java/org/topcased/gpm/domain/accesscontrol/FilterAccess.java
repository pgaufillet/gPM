/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.accesscontrol;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "FILTER_ACCESS")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class FilterAccess implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = 1190904064209063743L;

    protected java.lang.String roleName;

    /**
     * 
     */
    @javax.persistence.Column(name = "ROLE_NAME", length = 50, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    @org.hibernate.annotations.Index(name = "filter_role_name_idx")
    public java.lang.String getRoleName() {
        return this.roleName;
    }

    public void setRoleName(java.lang.String pRoleName) {
        this.roleName = pRoleName;
    }

    protected java.lang.String visibility;

    /**
     * 
     */
    @javax.persistence.Column(name = "VISIBILITY", length = 50, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getVisibility() {
        return this.visibility;
    }

    public void setVisibility(java.lang.String pVisibility) {
        this.visibility = pVisibility;
    }

    protected java.lang.String typeName;

    /**
     * 
     */
    @javax.persistence.Column(name = "TYPE_NAME", length = 50, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getTypeName() {
        return this.typeName;
    }

    public void setTypeName(java.lang.String pTypeName) {
        this.typeName = pTypeName;
    }

    protected java.lang.String fieldName;

    /**
     * 
     */
    @javax.persistence.Column(name = "FIELD_NAME", length = 100, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    @org.hibernate.annotations.Index(name = "filter_field_name_ixd")
    public java.lang.String getFieldName() {
        return this.fieldName;
    }

    public void setFieldName(java.lang.String pFieldName) {
        this.fieldName = pFieldName;
    }

    protected java.lang.Boolean executable;

    /**
     * 
     */
    @javax.persistence.Column(name = "EXECUTABLE", nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.Boolean")
    public java.lang.Boolean getExecutable() {
        return this.executable;
    }

    public void setExecutable(java.lang.Boolean pExecutable) {
        this.executable = pExecutable;
    }

    protected java.lang.Boolean editable;

    /**
     * 
     */
    @javax.persistence.Column(name = "EDITABLE", nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.Boolean")
    public java.lang.Boolean getEditable() {
        return this.editable;
    }

    public void setEditable(java.lang.Boolean pEditable) {
        this.editable = pEditable;
    }

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected java.util.Set<org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint> filterAccessConstraintList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint>();

    /**
     * 
     */
    @javax.persistence.ManyToMany(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint.class)
    @javax.persistence.JoinTable(name = "CONSTRAINTS2FILTER_ACCESSES", joinColumns = @javax.persistence.JoinColumn(name = "FILTER_ACCESSES_FK"), inverseJoinColumns = @javax.persistence.JoinColumn(name = "CONSTRAINTS_FK"))
    @org.hibernate.annotations.OrderBy(clause = "FILTER_ACCESSES_FK")
    @org.hibernate.annotations.ForeignKey(inverseName = "FILTER_ACCESS_CONSTRAINT_FILTE", name = "FILTER_ACCESS_CONSTRAINTS_FKC")
    public java.util.Set<org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint> getConstraints() {
        return this.filterAccessConstraintList;
    }

    public void setConstraints(
            java.util.Set<org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint> pConstraints) {
        this.filterAccessConstraintList = pConstraints;
    }

    /**
     * Add a org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint.
     * 
     * @param pConstraints
     *            the entity to add.
     */
    public void addToFilterAccessConstraintList(
            org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint pConstraints) {
        if (this.filterAccessConstraintList == null) {
            this.filterAccessConstraintList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint>();
        }
        this.filterAccessConstraintList.add(pConstraints);
    }

    /**
     * Remove a org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint.
     * 
     * @param pConstraints
     *            the entity to remove.
     */
    public void removeFromFilterAccessConstraintList(
            org.topcased.gpm.domain.accesscontrol.FilterAccessConstraint pConstraints) {
        if (this.filterAccessConstraintList != null) {
            this.filterAccessConstraintList.remove(pConstraints);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an FilterAccess instance and
     * all identifiers for this entity equal the identifiers of the argument
     * entity. Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof FilterAccess)) {
            return false;
        }
        final FilterAccess lFilterAccess = (FilterAccess) pObject;
        if (this.getId() == null || lFilterAccess.getId() == null
                || !lFilterAccess.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.accesscontrol.FilterAccess}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.accesscontrol.FilterAccess}
     */
    public static org.topcased.gpm.domain.accesscontrol.FilterAccess newInstance() {
        return new org.topcased.gpm.domain.accesscontrol.FilterAccess();
    }
}

/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.accesscontrol;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "ROLES_FOR_PRODUCT")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class RolesForProduct implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = -5504218727707724100L;

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected org.topcased.gpm.domain.product.Product product;

    /**
     * 
     */
    @javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.product.Product.class)
    @javax.persistence.JoinColumn(nullable = false, name = "PRODUCT_FK")
    @org.hibernate.annotations.ForeignKey(name = "ROLES_FOR_PRODUCT_PRODUCT_FKC")
    @org.hibernate.annotations.Index(name = "product_fk_idx")
    public org.topcased.gpm.domain.product.Product getProduct() {
        return this.product;
    }

    public void setProduct(org.topcased.gpm.domain.product.Product pProduct) {
        this.product = pProduct;
    }

    protected java.util.Set<org.topcased.gpm.domain.accesscontrol.Role> roleList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.accesscontrol.Role>();

    /**
     * 
     */
    @javax.persistence.ManyToMany(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.accesscontrol.Role.class)
    @javax.persistence.JoinTable(name = "ROLES2ROLES_FOR_PRODUCTS", joinColumns = @javax.persistence.JoinColumn(name = "ROLES_FOR_PRODUCTS_FK"), inverseJoinColumns = @javax.persistence.JoinColumn(name = "ROLES_FK"))
    @org.hibernate.annotations.OrderBy(clause = "ROLES_FOR_PRODUCTS_FK")
    @org.hibernate.annotations.ForeignKey(inverseName = "ROLE_ROLES_FOR_PRODUCTS_FKC", name = "ROLES_FOR_PRODUCT_ROLES_FKC")
    @org.hibernate.annotations.IndexColumn(name = "role_list_fk_idx")
    public java.util.Set<org.topcased.gpm.domain.accesscontrol.Role> getRoles() {
        return this.roleList;
    }

    public void setRoles(
            java.util.Set<org.topcased.gpm.domain.accesscontrol.Role> pRoles) {
        this.roleList = pRoles;
    }

    /**
     * Add a org.topcased.gpm.domain.accesscontrol.Role.
     * 
     * @param pRoles
     *            the entity to add.
     */
    public void addToRoleList(org.topcased.gpm.domain.accesscontrol.Role pRoles) {
        if (this.roleList == null) {
            this.roleList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.accesscontrol.Role>();
        }
        this.roleList.add(pRoles);
    }

    /**
     * Remove a org.topcased.gpm.domain.accesscontrol.Role.
     * 
     * @param pRoles
     *            the entity to remove.
     */
    public void removeFromRoleList(
            org.topcased.gpm.domain.accesscontrol.Role pRoles) {
        if (this.roleList != null) {
            this.roleList.remove(pRoles);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an RolesForProduct instance
     * and all identifiers for this entity equal the identifiers of the argument
     * entity. Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof RolesForProduct)) {
            return false;
        }
        final RolesForProduct lRolesForProduct = (RolesForProduct) pObject;
        if (this.getId() == null || lRolesForProduct.getId() == null
                || !lRolesForProduct.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.accesscontrol.RolesForProduct}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.accesscontrol.RolesForProduct}
     */
    public static org.topcased.gpm.domain.accesscontrol.RolesForProduct newInstance() {
        return new org.topcased.gpm.domain.accesscontrol.RolesForProduct();
    }

}

/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.search;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "FILTER_FIELD")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class FilterField implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = -3278916101632276803L;

    protected java.lang.String labelKey;

    /**
     * 
     */
    @javax.persistence.Column(name = "LABEL_KEY", length = 100, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    @org.hibernate.annotations.Index(name = "filter_field_label_key_idx")
    public java.lang.String getLabelKey() {
        return this.labelKey;
    }

    public void setLabelKey(java.lang.String pLabelKey) {
        this.labelKey = pLabelKey;
    }

    protected java.lang.String virtualFieldType;

    /**
     * 
     */
    @javax.persistence.Column(name = "VIRTUAL_FIELD_TYPE", length = 50, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getVirtualFieldType() {
        return this.virtualFieldType;
    }

    public void setVirtualFieldType(java.lang.String pVirtualFieldType) {
        this.virtualFieldType = pVirtualFieldType;
    }

    protected int fieldLevel;

    /**
     * 
     */
    @javax.persistence.Column(name = "FIELD_LEVEL", unique = false)
    @org.hibernate.annotations.Type(type = "int")
    public int getFieldLevel() {
        return this.fieldLevel;
    }

    public void setFieldLevel(int pFieldLevel) {
        this.fieldLevel = pFieldLevel;
    }

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected java.util.List<org.topcased.gpm.domain.search.FieldsContainerId> fieldsContainerIdList =
            new java.util.LinkedList<org.topcased.gpm.domain.search.FieldsContainerId>();

    /**
     * 
     */
    @javax.persistence.OneToMany(cascade = { javax.persistence.CascadeType.ALL }, fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.search.FieldsContainerId.class)
    @javax.persistence.JoinColumn(name = "FIELDS_CONTAINER_HIERARCHY_FK")
    @org.hibernate.annotations.IndexColumn(name = "FIELDS_CONTAINER_ID_IDX")
    @org.hibernate.annotations.OrderBy(clause = "FIELDS_CONTAINER_HIERARCHY_FK")
    @org.hibernate.annotations.ForeignKey(name = "FILTER_FIELD_FIELDS_CONTAINER_")
    public java.util.List<org.topcased.gpm.domain.search.FieldsContainerId> getFieldsContainerHierarchy() {
        return this.fieldsContainerIdList;
    }

    public void setFieldsContainerHierarchy(
            java.util.List<org.topcased.gpm.domain.search.FieldsContainerId> pFieldsContainerHierarchy) {
        this.fieldsContainerIdList = pFieldsContainerHierarchy;
    }

    /**
     * Add a org.topcased.gpm.domain.search.FieldsContainerId.
     * 
     * @param pFieldsContainerHierarchy
     *            the entity to add.
     */
    public void addToFieldsContainerIdList(
            org.topcased.gpm.domain.search.FieldsContainerId pFieldsContainerHierarchy) {
        if (this.fieldsContainerIdList == null) {
            this.fieldsContainerIdList =
                    new java.util.LinkedList<org.topcased.gpm.domain.search.FieldsContainerId>();
        }
        this.fieldsContainerIdList.add(pFieldsContainerHierarchy);
    }

    /**
     * Remove a org.topcased.gpm.domain.search.FieldsContainerId.
     * 
     * @param pFieldsContainerHierarchy
     *            the entity to remove.
     */
    public void removeFromFieldsContainerIdList(
            org.topcased.gpm.domain.search.FieldsContainerId pFieldsContainerHierarchy) {
        if (this.fieldsContainerIdList != null) {
            this.fieldsContainerIdList.remove(pFieldsContainerHierarchy);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an FilterField instance and
     * all identifiers for this entity equal the identifiers of the argument
     * entity. Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof FilterField)) {
            return false;
        }
        final FilterField lFilterField = (FilterField) pObject;
        if (this.getId() == null || lFilterField.getId() == null
                || !lFilterField.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.search.FilterField}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.search.FilterField}
     */
    public static org.topcased.gpm.domain.search.FilterField newInstance() {
        return new org.topcased.gpm.domain.search.FilterField();
    }

}
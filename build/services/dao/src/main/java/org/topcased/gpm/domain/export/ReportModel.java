/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.export;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "REPORT_MODEL")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class ReportModel implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = -3067291268734703167L;

    protected java.lang.String name;

    /**
     * 
     */
    @javax.persistence.Column(name = "NAME", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    @org.hibernate.annotations.Index(name = "report_model_name_idx")
    public java.lang.String getName() {
        return this.name;
    }

    public void setName(java.lang.String pName) {
        this.name = pName;
    }

    protected java.lang.String path;

    /**
     * 
     */
    @javax.persistence.Column(name = "PATH", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getPath() {
        return this.path;
    }

    public void setPath(java.lang.String pPath) {
        this.path = pPath;
    }

    protected java.lang.String description;

    /**
     * 
     */
    @javax.persistence.Column(name = "DESCRIPTION", length = 300, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getDescription() {
        return this.description;
    }

    public void setDescription(java.lang.String pDescription) {
        this.description = pDescription;
    }

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected java.util.Set<org.topcased.gpm.domain.export.ExportType> exportTypeList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.export.ExportType>();

    /**
     * 
     */
    @javax.persistence.ManyToMany(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.export.ExportType.class)
    @javax.persistence.JoinTable(name = "EXPORT_TYPES2REPORT_MODELS", joinColumns = @javax.persistence.JoinColumn(name = "REPORT_MODELS_FK"), inverseJoinColumns = @javax.persistence.JoinColumn(name = "EXPORT_TYPES_FK"))
    @org.hibernate.annotations.OrderBy(clause = "REPORT_MODELS_FK")
    @org.hibernate.annotations.ForeignKey(inverseName = "EXPORT_TYPE_REPORT_MODELS_FKC", name = "REPORT_MODEL_EXPORT_TYPES_FKC")
    public java.util.Set<org.topcased.gpm.domain.export.ExportType> getExportTypes() {
        return this.exportTypeList;
    }

    public void setExportTypes(
            java.util.Set<org.topcased.gpm.domain.export.ExportType> pExportTypes) {
        this.exportTypeList = pExportTypes;
    }

    /**
     * Add a org.topcased.gpm.domain.export.ExportType.
     * 
     * @param pExportTypes
     *            the entity to add.
     */
    public void addToExportTypeList(
            org.topcased.gpm.domain.export.ExportType pExportTypes) {
        if (this.exportTypeList == null) {
            this.exportTypeList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.export.ExportType>();
        }
        this.exportTypeList.add(pExportTypes);
    }

    /**
     * Remove a org.topcased.gpm.domain.export.ExportType.
     * 
     * @param pExportTypes
     *            the entity to remove.
     */
    public void removeFromExportTypeList(
            org.topcased.gpm.domain.export.ExportType pExportTypes) {
        if (this.exportTypeList != null) {
            this.exportTypeList.remove(pExportTypes);
        }
    }

    protected java.util.Set<org.topcased.gpm.domain.fields.FieldsContainer> fieldsContainerList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.fields.FieldsContainer>();

    /**
     * 
     */
    @javax.persistence.ManyToMany(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.fields.FieldsContainer.class)
    @javax.persistence.JoinTable(name = "FIELDS_CONTAINERS2REPORT_MODEL", joinColumns = @javax.persistence.JoinColumn(name = "REPORT_MODELS_FK"), inverseJoinColumns = @javax.persistence.JoinColumn(name = "FIELDS_CONTAINERS_FK"))
    @org.hibernate.annotations.OrderBy(clause = "REPORT_MODELS_FK")
    @org.hibernate.annotations.ForeignKey(inverseName = "FIELDS_CONTAINER_REPORT_MODELS", name = "REPORT_MODEL_FIELDS_CONTAINERS")
    public java.util.Set<org.topcased.gpm.domain.fields.FieldsContainer> getFieldsContainers() {
        return this.fieldsContainerList;
    }

    public void setFieldsContainers(
            java.util.Set<org.topcased.gpm.domain.fields.FieldsContainer> pFieldsContainers) {
        this.fieldsContainerList = pFieldsContainers;
    }

    /**
     * Add a org.topcased.gpm.domain.fields.FieldsContainer.
     * 
     * @param pFieldsContainers
     *            the entity to add.
     */
    public void addToFieldsContainerList(
            org.topcased.gpm.domain.fields.FieldsContainer pFieldsContainers) {
        if (this.fieldsContainerList == null) {
            this.fieldsContainerList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.fields.FieldsContainer>();
        }
        this.fieldsContainerList.add(pFieldsContainers);
    }

    /**
     * Remove a org.topcased.gpm.domain.fields.FieldsContainer.
     * 
     * @param pFieldsContainers
     *            the entity to remove.
     */
    public void removeFromFieldsContainerList(
            org.topcased.gpm.domain.fields.FieldsContainer pFieldsContainers) {
        if (this.fieldsContainerList != null) {
            this.fieldsContainerList.remove(pFieldsContainers);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an ReportModel instance and
     * all identifiers for this entity equal the identifiers of the argument
     * entity. Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof ReportModel)) {
            return false;
        }
        final ReportModel lReportModel = (ReportModel) pObject;
        if (this.getId() == null || lReportModel.getId() == null
                || !lReportModel.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.export.ReportModel}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.export.ReportModel}
     */
    public static org.topcased.gpm.domain.export.ReportModel newInstance() {
        return new org.topcased.gpm.domain.export.ReportModel();
    }

}

/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.fields;

/**
 * <p>
 * Definition of Field to be included in a sheet definition.
 * </p>
 * 
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "FIELD")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Proxy(lazy = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class Field extends
        org.topcased.gpm.domain.attributes.AttributesContainer {
    private static final long serialVersionUID = -2670115327002169962L;

    protected java.lang.String labelKey;

    /**
     * 
     */
    @javax.persistence.Column(name = "LABEL_KEY", length = 100, nullable = false, unique = false)
    @org.hibernate.annotations.Index(name = "fields_labelkey_idx")
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getLabelKey() {
        return this.labelKey;
    }

    public void setLabelKey(java.lang.String pLabelKey) {
        this.labelKey = pLabelKey;
    }

    protected boolean mandatory;

    /**
     * 
     */
    @javax.persistence.Column(name = "MANDATORY", nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "boolean")
    public boolean isMandatory() {
        return this.mandatory;
    }

    public void setMandatory(boolean pMandatory) {
        this.mandatory = pMandatory;
    }

    protected boolean updatable;

    /**
     * 
     */
    @javax.persistence.Column(name = "UPDATABLE", nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "boolean")
    public boolean isUpdatable() {
        return this.updatable;
    }

    public void setUpdatable(boolean pUpdatable) {
        this.updatable = pUpdatable;
    }

    protected boolean multiValued;

    /**
     * 
     */
    @javax.persistence.Column(name = "MULTI_VALUED", nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "boolean")
    public boolean isMultiValued() {
        return this.multiValued;
    }

    public void setMultiValued(boolean pMultiValued) {
        this.multiValued = pMultiValued;
    }

    protected java.lang.String description;

    /**
     * 
     */
    @javax.persistence.Column(name = "DESCRIPTION", length = 255, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getDescription() {
        return this.description;
    }

    public void setDescription(java.lang.String pDescription) {
        this.description = pDescription;
    }

    protected boolean confidential;

    /**
     * 
     */
    @javax.persistence.Column(name = "CONFIDENTIAL", nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "boolean")
    public boolean isConfidential() {
        return this.confidential;
    }

    public void setConfidential(boolean pConfidential) {
        this.confidential = pConfidential;
    }

    protected boolean exportable;

    /**
     * 
     */
    @javax.persistence.Column(name = "EXPORTABLE", nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "boolean")
    public boolean isExportable() {
        return this.exportable;
    }

    public void setExportable(boolean pExportable) {
        this.exportable = pExportable;
    }

    protected java.lang.String lineSeparator;

    /**
     * 
     */
    @javax.persistence.Column(name = "LINE_SEPARATOR", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getLineSeparator() {
        return this.lineSeparator;
    }

    public void setLineSeparator(java.lang.String pLineSeparator) {
        this.lineSeparator = pLineSeparator;
    }

    protected boolean subfield;

    /**
     * 
     */
    @javax.persistence.Column(name = "SUBFIELD", nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "boolean")
    public boolean isSubfield() {
        return this.subfield;
    }

    public void setSubfield(boolean pSubfield) {
        this.subfield = pSubfield;
    }

    protected boolean pointerField;

    /**
     * <p>
     * Attribute indicating if this field must reference another field from
     * another sheet or not.
     * </p>
     */
    @javax.persistence.Column(name = "POINTER_FIELD", unique = false)
    @org.hibernate.annotations.Type(type = "boolean")
    public boolean isPointerField() {
        return this.pointerField;
    }

    public void setPointerField(boolean pPointerField) {
        this.pointerField = pPointerField;
    }

    protected java.lang.String id;

    /**
     * 
     */
    protected org.topcased.gpm.domain.fields.FieldsContainer container;

    /**
     * 
     */
    @javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.fields.FieldsContainer.class)
    @javax.persistence.JoinColumn(name = "CONTAINER_FK")
    @org.hibernate.annotations.ForeignKey(name = "FIELD_CONTAINER_FKC")
    @org.hibernate.annotations.IndexColumn(name = "field_container_fk_idx")
    public org.topcased.gpm.domain.fields.FieldsContainer getContainer() {
        return this.container;
    }

    public void setContainer(
            org.topcased.gpm.domain.fields.FieldsContainer pContainer) {
        this.container = pContainer;
    }

    protected org.topcased.gpm.domain.facilities.FieldDisplayHint fieldDisplayHint;

    /**
     * 
     */
    @javax.persistence.OneToOne(cascade = { javax.persistence.CascadeType.ALL }, fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.facilities.FieldDisplayHint.class)
    @javax.persistence.JoinColumn(name = "FIELD_DISPLAY_HINT_FK")
    @org.hibernate.annotations.ForeignKey(name = "FIELD_FIELD_DISPLAY_HINT_FKC")
    public org.topcased.gpm.domain.facilities.FieldDisplayHint getFieldDisplayHint() {
        return this.fieldDisplayHint;
    }

    public void setFieldDisplayHint(
            org.topcased.gpm.domain.facilities.FieldDisplayHint pFieldDisplayHint) {
        this.fieldDisplayHint = pFieldDisplayHint;
    }

    protected org.topcased.gpm.domain.fields.PointerFieldAttributes pointerFieldAttributes;

    /**
     * 
     */
    @javax.persistence.OneToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.fields.PointerFieldAttributes.class)
    @javax.persistence.JoinColumn(name = "POINTER_FIELD_ATTRIBUTES_FK")
    @org.hibernate.annotations.ForeignKey(name = "FIELD_POINTER_FIELD_ATTRIBUTES")
    public org.topcased.gpm.domain.fields.PointerFieldAttributes getPointerFieldAttributes() {
        return this.pointerFieldAttributes;
    }

    public void setPointerFieldAttributes(
            org.topcased.gpm.domain.fields.PointerFieldAttributes pPointerFieldAttributes) {
        this.pointerFieldAttributes = pPointerFieldAttributes;
    }

    /**
    *
    */
    public Field() {
        super();
        setLineSeparator(";");
    }

    /**
     * <p>
     * Dummy method to prevent AndroMDA from generating the impl. classes.
     * </p>
     */
    @javax.persistence.Transient
    public void dummy() {
        // Dummy method. No actual implementation.
    }

    /**
     * Returns <code>true</code> if the argument is an Field instance and all
     * identifiers for this entity equal the identifiers of the argument entity.
     * The <code>equals</code> method of the parent entity will also need to
     * return <code>true</code>. Returns <code>false</code> otherwise.
     * 
     * @see org.topcased.gpm.domain.attributes.AttributesContainer#equals(Object)
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof Field)) {
            return false;
        }
        final Field lField = (Field) pObject;
        if (this.getId() == null || lField.getId() == null
                || !lField.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers and the hash code
     * of the parent entity.
     * 
     * @return a hash code value for this object.
     * @see org.topcased.gpm.domain.attributes.AttributesContainer#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = super.hashCode();
        int lId = 0;
        if (id != null) {
            lId = id.hashCode();
        }
        lHashCode = HASHCODE_CONSTANT * lHashCode + lId;

        return lHashCode;
    }

}
/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.accesscontrol;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "APPLI_ACTION_ACCESS_CONTROL")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class AppliActionAccessControl extends
        org.topcased.gpm.domain.accesscontrol.AccessControl {
    private static final long serialVersionUID = -8676647224000557733L;

    protected java.lang.String actionKey;

    /**
     * <p>
     * Identifier of the action.
     * </p>
     */
    @javax.persistence.Column(name = "ACTION_KEY", length = 100, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getActionKey() {
        return this.actionKey;
    }

    public void setActionKey(java.lang.String pActionKey) {
        this.actionKey = pActionKey;
    }

    protected java.lang.Boolean confidential;

    /**
     * 
     */
    @javax.persistence.Column(name = "CONFIDENTIAL", unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.Boolean")
    public java.lang.Boolean getConfidential() {
        return this.confidential;
    }

    public void setConfidential(java.lang.Boolean pConfidential) {
        this.confidential = pConfidential;
    }

    protected java.lang.Boolean enabled;

    /**
     * 
     */
    @javax.persistence.Column(name = "ENABLED", unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.Boolean")
    public java.lang.Boolean getEnabled() {
        return this.enabled;
    }

    public void setEnabled(java.lang.Boolean pEnabled) {
        this.enabled = pEnabled;
    }

    protected java.lang.String id;

    /**
     * 
     */
    protected org.topcased.gpm.domain.businessProcess.BusinessProcess businessProcess;

    /**
     * 
     */
    @javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.businessProcess.BusinessProcess.class)
    @javax.persistence.JoinColumn(nullable = false, name = "BUSINESS_PROCESS_FK")
    @org.hibernate.annotations.ForeignKey(name = "APPLI_ACTION_ACCESS_CONTROL_BU")
    public org.topcased.gpm.domain.businessProcess.BusinessProcess getBusinessProcess() {
        return this.businessProcess;
    }

    public void setBusinessProcess(
            org.topcased.gpm.domain.businessProcess.BusinessProcess pBusinessProcess) {
        this.businessProcess = pBusinessProcess;
    }

    /**
     * Returns <code>true</code> if the argument is an AppliActionAccessControl
     * instance and all identifiers for this entity equal the identifiers of the
     * argument entity. The <code>equals</code> method of the parent entity will
     * also need to return <code>true</code>. Returns <code>false</code>
     * otherwise.
     * 
     * @param pObject
     *            the object to compare with
     * @return a boolean
     * @see org.topcased.gpm.domain.accesscontrol.AccessControl#equals(Object)
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof AppliActionAccessControl)) {
            return false;
        }
        final AppliActionAccessControl lAppliActionAccessControl =
                (AppliActionAccessControl) pObject;
        if (this.getId() == null || lAppliActionAccessControl.getId() == null
                || !lAppliActionAccessControl.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers and the hash code
     * of the parent entity.
     * 
     * @return a hash code value for this object.
     * @see org.topcased.gpm.domain.accesscontrol.AccessControl#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = super.hashCode();
        int lId = 0;
        if (id != null) {
            lId = id.hashCode();
        }
        lHashCode = HASHCODE_CONSTANT * lHashCode + lId;

        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.accesscontrol.AppliActionAccessControl}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.accesscontrol.AppliActionAccessControl}
     */
    public static org.topcased.gpm.domain.accesscontrol.AppliActionAccessControl newInstance() {
        return new org.topcased.gpm.domain.accesscontrol.AppliActionAccessControl();
    }

}
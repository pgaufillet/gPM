/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.dictionary;

import java.util.Collection;

/**
 * @author Atos
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "CATEGORY")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class Category implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = 8900993010540358359L;

    protected java.lang.String name;

    /**
     * 
     */
    @javax.persistence.Column(name = "NAME", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Index(name = "category_name_idx")
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getName() {
        return this.name;
    }

    public void setName(java.lang.String pName) {
        this.name = pName;
    }

    protected org.topcased.gpm.domain.dictionary.CategoryAccess accessLevel;

    /**
     * 
     */
    @javax.persistence.Column(name = "ACCESS_LEVEL", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "org.topcased.gpm.domain.dictionary.CategoryAccessEnum")
    @javax.persistence.Enumerated(javax.persistence.EnumType.STRING)
    public org.topcased.gpm.domain.dictionary.CategoryAccess getAccessLevel() {
        return this.accessLevel;
    }

    public void setAccessLevel(
            org.topcased.gpm.domain.dictionary.CategoryAccess pAccessLevel) {
        this.accessLevel = pAccessLevel;
    }

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected java.util.List<org.topcased.gpm.domain.dictionary.CategoryValue> categoryValueList =
            new java.util.LinkedList<org.topcased.gpm.domain.dictionary.CategoryValue>();

    /**
     * 
     */
    @javax.persistence.OneToMany(cascade = { javax.persistence.CascadeType.ALL }, fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.dictionary.CategoryValue.class)
    @javax.persistence.JoinColumn(name = "CATEGORY_FK")
    @org.hibernate.annotations.IndexColumn(name = "CATEGORY_VALUE_IDX")
    @org.hibernate.annotations.OrderBy(clause = "CATEGORY_FK")
    @org.hibernate.annotations.ForeignKey(name = "CATEGORY_CATEGORY_VALUES_FKC")
    public java.util.List<org.topcased.gpm.domain.dictionary.CategoryValue> getCategoryValues() {
        return this.categoryValueList;
    }

    public void setCategoryValues(
            java.util.List<org.topcased.gpm.domain.dictionary.CategoryValue> pCategoryValues) {
        this.categoryValueList = pCategoryValues;
    }

    /**
     * Add a org.topcased.gpm.domain.dictionary.CategoryValue.
     * 
     * @param pCategoryValues
     *            the entity to add.
     */
    public void addToCategoryValueList(
            org.topcased.gpm.domain.dictionary.CategoryValue pCategoryValues) {
        if (this.categoryValueList == null) {
            this.categoryValueList =
                    new java.util.LinkedList<org.topcased.gpm.domain.dictionary.CategoryValue>();
        }
        this.categoryValueList.add(pCategoryValues);
    }

    /**
     * Remove a org.topcased.gpm.domain.dictionary.CategoryValue.
     * 
     * @param pCategoryValues
     *            the entity to remove.
     */
    public void removeFromCategoryValueList(
            org.topcased.gpm.domain.dictionary.CategoryValue pCategoryValues) {
        if (this.categoryValueList != null) {
            this.categoryValueList.remove(pCategoryValues);
        }
    }

    protected org.topcased.gpm.domain.dictionary.Dictionary dictionary;

    /**
     * 
     */
    @javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.dictionary.Dictionary.class)
    @javax.persistence.JoinColumn(nullable = false, name = "DICTIONARY_FK")
    @org.hibernate.annotations.ForeignKey(name = "CATEGORY_DICTIONARY_FKC")
    public org.topcased.gpm.domain.dictionary.Dictionary getDictionary() {
        return this.dictionary;
    }

    public void setDictionary(
            org.topcased.gpm.domain.dictionary.Dictionary pDictionary) {
        this.dictionary = pDictionary;
    }

    /**
     * 
     */
    @javax.persistence.Transient
    public java.lang.String[] getValues() {
        Collection<CategoryValue> lCatValues = getCategoryValues();
        String[] lStrValues = new String[lCatValues.size()];
        int i = 0;

        for (CategoryValue lCatValue : lCatValues) {
            lStrValues[i++] = lCatValue.getValue();
        }
        return lStrValues;
    }

    /**
     * Returns <code>true</code> if the argument is an Category instance and all
     * identifiers for this entity equal the identifiers of the argument entity.
     * Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof Category)) {
            return false;
        }
        final Category lCategory = (Category) pObject;
        if (this.getId() == null || lCategory.getId() == null
                || !lCategory.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.dictionary.Category}.
     */
    public static org.topcased.gpm.domain.dictionary.Category newInstance() {
        return new org.topcased.gpm.domain.dictionary.Category();
    }
}

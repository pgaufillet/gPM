/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.businessProcess;

/**
 * @author Atos
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "BUSINESS_PROCESS")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.NONSTRICT_READ_WRITE)
public class BusinessProcess extends
        org.topcased.gpm.domain.extensions.ExtensionsContainer {
    private static final long serialVersionUID = -2826872604471074285L;

    protected java.lang.String name;

    /**
     * <p>
     * Name of the business process.
     * </p>
     */
    @javax.persistence.Column(name = "NAME", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Index(name = "business_process_name_idx")
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getName() {
        return this.name;
    }

    public void setName(java.lang.String pName) {
        this.name = pName;
    }

    protected java.lang.String id;

    /**
     * 
     */

    protected java.util.Set<org.topcased.gpm.domain.product.Product> productList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.product.Product>();

    /**
     * 
     */
    @javax.persistence.OneToMany(mappedBy = "businessProcess", fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.product.Product.class)
    @org.hibernate.annotations.OrderBy(clause = "BUSINESS_PROCESS_FK")
    @org.hibernate.annotations.ForeignKey(name = "BUSINESS_PROCESS_PRODUCTS_FKC")
    public java.util.Set<org.topcased.gpm.domain.product.Product> getProducts() {
        return this.productList;
    }

    public void setProducts(
            java.util.Set<org.topcased.gpm.domain.product.Product> pProducts) {
        this.productList = pProducts;
    }

    /**
     * Add a org.topcased.gpm.domain.product.Product.
     * 
     * @param pProducts
     *            the entity to add.
     */
    public void addToProductList(
            org.topcased.gpm.domain.product.Product pProducts) {
        if (this.productList == null) {
            this.productList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.product.Product>();
        }
        this.productList.add(pProducts);
    }

    /**
     * Remove a org.topcased.gpm.domain.product.Product.
     * 
     * @param pProducts
     *            the entity to remove.
     */
    public void removeFromProductList(
            org.topcased.gpm.domain.product.Product pProducts) {
        if (this.productList != null) {
            this.productList.remove(pProducts);
        }
    }

    protected org.topcased.gpm.domain.dictionary.Dictionary dictionary;

    /**
     * 
     */
    @javax.persistence.OneToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.dictionary.Dictionary.class)
    @javax.persistence.JoinColumn(name = "DICTIONARY_FK")
    @org.hibernate.annotations.ForeignKey(name = "BUSINESS_PROCESS_DICTIONARY_FK")
    public org.topcased.gpm.domain.dictionary.Dictionary getDictionary() {
        return this.dictionary;
    }

    public void setDictionary(
            org.topcased.gpm.domain.dictionary.Dictionary pDictionary) {
        this.dictionary = pDictionary;
    }

    protected org.topcased.gpm.domain.product.ProductType productType;

    /**
     * 
     */
    @javax.persistence.OneToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.product.ProductType.class)
    @javax.persistence.JoinColumn(name = "PRODUCT_TYPE_FK")
    @org.hibernate.annotations.ForeignKey(name = "BUSINESS_PROCESS_PRODUCT_TYPE_")
    public org.topcased.gpm.domain.product.ProductType getProductType() {
        return this.productType;
    }

    public void setProductType(
            org.topcased.gpm.domain.product.ProductType pProductType) {
        this.productType = pProductType;
    }

    protected java.util.Set<org.topcased.gpm.domain.search.FilterComponent> filterComponentList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.search.FilterComponent>();

    /**
     * 
     */
    @javax.persistence.OneToMany(cascade = { javax.persistence.CascadeType.ALL }, mappedBy = "businessProcess", fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.search.FilterComponent.class)
    @org.hibernate.annotations.OrderBy(clause = "BUSINESS_PROCESS_FK")
    @org.hibernate.annotations.ForeignKey(name = "BUSINESS_PROCESS_FILTER_COMPON")
    public java.util.Set<org.topcased.gpm.domain.search.FilterComponent> getFilterComponents() {
        return this.filterComponentList;
    }

    public void setFilterComponents(
            java.util.Set<org.topcased.gpm.domain.search.FilterComponent> pFilterComponents) {
        this.filterComponentList = pFilterComponents;
    }

    /**
     * Add a org.topcased.gpm.domain.search.FilterComponent.
     * 
     * @param pFilterComponents
     *            the entity to add.
     */
    public void addToFilterComponentList(
            org.topcased.gpm.domain.search.FilterComponent pFilterComponents) {
        if (this.filterComponentList == null) {
            this.filterComponentList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.search.FilterComponent>();
        }
        this.filterComponentList.add(pFilterComponents);
    }

    /**
     * Remove a org.topcased.gpm.domain.search.FilterComponent.
     * 
     * @param pFilterComponents
     *            the entity to remove.
     */
    public void removeFromFilterComponentList(
            org.topcased.gpm.domain.search.FilterComponent pFilterComponents) {
        if (this.filterComponentList != null) {
            this.filterComponentList.remove(pFilterComponents);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an BusinessProcess instance
     * and all identifiers for this entity equal the identifiers of the argument
     * entity. The <code>equals</code> method of the parent entity will also
     * need to return <code>true</code>. Returns <code>false</code> otherwise.
     * 
     * @see org.topcased.gpm.domain.extensions.ExtensionsContainer#equals(Object)
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof BusinessProcess)) {
            return false;
        }
        final BusinessProcess lBusinessProcess = (BusinessProcess) pObject;
        if (this.getId() == null || lBusinessProcess.getId() == null
                || !lBusinessProcess.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers and the hash code
     * of the parent entity.
     * 
     * @return a hash code value for this object.
     * @see org.topcased.gpm.domain.extensions.ExtensionsContainer#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = super.hashCode();
        int lId = 0;
        if (id != null) {
            lId = id.hashCode();
        }
        lHashCode = HASHCODE_CONSTANT * lHashCode + lId;

        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.businessProcess.BusinessProcess}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.businessProcess.BusinessProcess}
     */
    public static org.topcased.gpm.domain.businessProcess.BusinessProcess newInstance() {
        return new org.topcased.gpm.domain.businessProcess.BusinessProcess();
    }

}

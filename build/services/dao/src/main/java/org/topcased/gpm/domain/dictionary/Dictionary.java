/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.dictionary;

/**
 * <p>
 * Data storage zone for :
 * </p>
 * <p>
 * - parametrization data
 * </p>
 * <p>
 * - business data
 * </p>
 * 
 * @author Atos
 */
@javax.persistence.Entity
@javax.persistence.Table(name = "DICTIONARY")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class Dictionary implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = 205194774944289819L;

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected java.util.Set<org.topcased.gpm.domain.dictionary.Category> categoryList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.dictionary.Category>();

    /**
     * 
     */
    @javax.persistence.OneToMany(cascade = { javax.persistence.CascadeType.ALL }, mappedBy = "dictionary", fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.dictionary.Category.class)
    @org.hibernate.annotations.OrderBy(clause = "DICTIONARY_FK")
    @org.hibernate.annotations.ForeignKey(name = "DICTIONARY_CATEGORIES_FKC")
    @org.hibernate.annotations.Index(name = "category_list_fk_idx")
    public java.util.Set<org.topcased.gpm.domain.dictionary.Category> getCategories() {
        return this.categoryList;
    }

    public void setCategories(
            java.util.Set<org.topcased.gpm.domain.dictionary.Category> pCategories) {
        this.categoryList = pCategories;
    }

    /**
     * Add a org.topcased.gpm.domain.dictionary.Category.
     * 
     * @param pCategories
     *            the entity to add.
     */
    public void addToCategoryList(
            org.topcased.gpm.domain.dictionary.Category pCategories) {
        if (this.categoryList == null) {
            this.categoryList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.dictionary.Category>();
        }
        this.categoryList.add(pCategories);
    }

    /**
     * Remove a org.topcased.gpm.domain.dictionary.Category.
     * 
     * @param pCategories
     *            the entity to remove.
     */
    public void removeFromCategoryList(
            org.topcased.gpm.domain.dictionary.Category pCategories) {
        if (this.categoryList != null) {
            this.categoryList.remove(pCategories);
        }
    }

    protected java.util.Set<org.topcased.gpm.domain.dictionary.Environment> environmentList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.dictionary.Environment>();

    /**
     * 
     */
    @javax.persistence.OneToMany(cascade = { javax.persistence.CascadeType.ALL }, mappedBy = "dictionary", fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.dictionary.Environment.class)
    @org.hibernate.annotations.OrderBy(clause = "DICTIONARY_FK")
    @org.hibernate.annotations.ForeignKey(name = "DICTIONARY_ENVIRONMENTS_FKC")
    public java.util.Set<org.topcased.gpm.domain.dictionary.Environment> getEnvironments() {
        return this.environmentList;
    }

    public void setEnvironments(
            java.util.Set<org.topcased.gpm.domain.dictionary.Environment> pEnvironments) {
        this.environmentList = pEnvironments;
    }

    /**
     * Add a org.topcased.gpm.domain.dictionary.Environment.
     * 
     * @param pEnvironments
     *            the entity to add.
     */
    public void addToEnvironmentList(
            org.topcased.gpm.domain.dictionary.Environment pEnvironments) {
        if (this.environmentList == null) {
            this.environmentList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.dictionary.Environment>();
        }
        this.environmentList.add(pEnvironments);
    }

    /**
     * Remove a org.topcased.gpm.domain.dictionary.Environment.
     * 
     * @param pEnvironments
     *            the entity to remove.
     */
    public void removeFromEnvironmentList(
            org.topcased.gpm.domain.dictionary.Environment pEnvironments) {
        if (this.environmentList != null) {
            this.environmentList.remove(pEnvironments);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an Dictionary instance and
     * all identifiers for this entity equal the identifiers of the argument
     * entity. Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof Dictionary)) {
            return false;
        }
        final Dictionary lDictionnary = (Dictionary) pObject;
        if (this.getId() == null || lDictionnary.getId() == null
                || !lDictionnary.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.dictionary.Dictionary}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.dictionary.Dictionary}
     */
    public static org.topcased.gpm.domain.dictionary.Dictionary newInstance() {
        return new org.topcased.gpm.domain.dictionary.Dictionary();
    }

}

/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringDao.vsl in andromda-spring-cartridge.
//
package org.topcased.gpm.domain.link;

/**
 * @see org.topcased.gpm.domain.link.Link
 * @author Atos
 */
public interface LinkDao
        extends
        org.topcased.gpm.domain.IDao<org.topcased.gpm.domain.link.Link, java.lang.String> {
    /**
     * <p>
     * Returns the destination links of a given sheet (as a list of sheet
     * identifiers)
     * </p>
     */
    public java.lang.String[] getDestinationLinks(java.lang.String pSourceId);

    /**
     * 
     */
    public java.lang.String[] getOriginLinks(java.lang.String pDestId);

    /**
     * 
     */
    public java.lang.String getSheetLinkId(java.lang.String pProcessName,
            java.lang.String pOriginProductName,
            java.lang.String pOriginSheetReference,
            java.lang.String pDestinationProductName,
            java.lang.String pDestinationSheetReference,
            java.lang.String pTypeName);

    /**
     * <p>
     * Get all links identifiers of a given sheet.
     * </p>
     */
    public java.util.List<String> getLinks(java.lang.String pContainerId);

    /**
     * 
     */
    public org.topcased.gpm.domain.link.LinkInfo getLinkInfos(
            java.lang.String pLinkId);

    /**
     * 
     */
    public java.util.Collection<String> getSheetLinksByType(String pLinkTypeId,
            String pElementId);

    /**
     * 
     */
    public java.util.Iterator<String> productLinksIterator(
            java.lang.String pProcessName,
            java.util.Collection<String> pProductNames,
            java.util.Collection<String> pTypeNames);

    /**
     * 
     */
    public org.topcased.gpm.domain.link.Link getNewLink(java.lang.String pTypeId);

    /**
     * 
     */
    public java.lang.Boolean isLinkExists(java.lang.String pLinkTypeName,
            java.lang.String pOriginId, java.lang.String pDestinationId);

    /**
     * 
     */
    public java.lang.String getId(java.lang.String pLinkTypeName,
            java.lang.String pOriginId, java.lang.String pDestinationId);

    /**
     * 
     */
    public java.lang.Boolean isSheetLink(java.lang.String pId);

    /**
     * 
     */
    public java.lang.Boolean isProductLink(java.lang.String pId);

    /**
     * 
     */
    public java.util.Iterator<String> sheetLinksIterator(
            java.lang.String pProcessName,
            java.util.Collection<String> pProductNames,
            java.util.Collection<String> pTypeNames);

    /**
     * 
     */
    public java.lang.String getProductLinkId(java.lang.String pProcessName,
            java.lang.String pOriginProductName,
            java.lang.String pDestinationProductName, java.lang.String pTypeName);

    /**
     * 
     */
    public java.lang.Boolean isSheetLinkExists(java.lang.String pTypeName,
            java.lang.String pOriginRef, java.lang.String pDestinationRef);

    /**
     * 
     */
    public java.lang.Boolean isProductLinkExists(java.lang.String pTypeName,
            java.lang.String pOriginProductName,
            java.lang.String pDestinationProductName);

    /**
     * 
     */
    public java.util.Iterator<String> sheetLinksIterator(
            java.lang.String pProcessName, java.lang.String pOriginProductName,
            java.lang.String pDestinationProductName,
            java.util.Collection<String> pTypeNames);

    /**
     * 
     */
    public java.util.List<String> getSheetLinkDestProducts(
            java.lang.String pProcessName, java.lang.String pSheetLinkTypeName,
            java.lang.String pOriginProductName);

    /**
     * 
     */
    public java.util.List<String> getExistingLinkTypes(String pValuesContainerId);

}
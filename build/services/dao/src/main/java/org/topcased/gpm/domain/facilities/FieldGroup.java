/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.facilities;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "FIELD_GROUP")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Proxy(lazy = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class FieldGroup implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = -8771648490244010525L;

    protected java.lang.String name;

    /**
     * 
     */
    @javax.persistence.Column(name = "NAME", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    @org.hibernate.annotations.Index(name = "field_group_name_idx")
    public java.lang.String getName() {
        return this.name;
    }

    public void setName(java.lang.String pName) {
        this.name = pName;
    }

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected org.topcased.gpm.domain.fields.FieldsContainer container;

    /**
     * 
     */
    @javax.persistence.ManyToOne(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.fields.FieldsContainer.class)
    @javax.persistence.JoinColumn(nullable = false, name = "CONTAINER_FK")
    @org.hibernate.annotations.ForeignKey(name = "FIELD_GROUP_CONTAINER_FKC")
    @org.hibernate.annotations.Index(name = "field_group_fk_idx", columnNames = {
                                                                                 "CONTAINER_FK",
                                                                                 "NAME" })
    public org.topcased.gpm.domain.fields.FieldsContainer getContainer() {
        return this.container;
    }

    public void setContainer(
            org.topcased.gpm.domain.fields.FieldsContainer pContainer) {
        this.container = pContainer;
    }

    protected java.util.List<org.topcased.gpm.domain.fields.Field> fieldList =
            new java.util.LinkedList<org.topcased.gpm.domain.fields.Field>();

    /**
     * 
     */
    @javax.persistence.ManyToMany(fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.fields.Field.class)
    @javax.persistence.JoinTable(name = "FIELD_GROUPS2FIELDS", joinColumns = @javax.persistence.JoinColumn(name = "FIELD_GROUPS_FK"), inverseJoinColumns = @javax.persistence.JoinColumn(name = "FIELDS_FK"))
    @org.hibernate.annotations.IndexColumn(name = "FIELD_GROUP_FIELDS_IDX")
    @org.hibernate.annotations.OrderBy(clause = "FIELD_GROUPS_FK")
    @org.hibernate.annotations.ForeignKey(inverseName = "FIELD_FIELD_GROUPS_FKC", name = "FIELD_GROUP_FIELDS_FKC")
    public java.util.List<org.topcased.gpm.domain.fields.Field> getFields() {
        return this.fieldList;
    }

    public void setFields(
            java.util.List<org.topcased.gpm.domain.fields.Field> pFields) {
        this.fieldList = pFields;
    }

    /**
     * Add a org.topcased.gpm.domain.fields.Field.
     * 
     * @param pFields
     *            the entity to add.
     */
    public void addToFieldList(org.topcased.gpm.domain.fields.Field pFields) {
        if (this.fieldList == null) {
            this.fieldList =
                    new java.util.LinkedList<org.topcased.gpm.domain.fields.Field>();
        }
        this.fieldList.add(pFields);
    }

    /**
     * Remove a org.topcased.gpm.domain.fields.Field.
     * 
     * @param pFields
     *            the entity to remove.
     */
    public void removeFromFieldList(org.topcased.gpm.domain.fields.Field pFields) {
        if (this.fieldList != null) {
            this.fieldList.remove(pFields);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an FieldGroup instance and
     * all identifiers for this entity equal the identifiers of the argument
     * entity. Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof FieldGroup)) {
            return false;
        }
        final FieldGroup lFieldGroup = (FieldGroup) pObject;
        if (this.getId() == null || lFieldGroup.getId() == null
                || !lFieldGroup.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

}
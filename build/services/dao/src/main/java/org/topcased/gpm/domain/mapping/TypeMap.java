/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.mapping;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "TYPE_MAP")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class TypeMap implements java.io.Serializable,
        org.topcased.gpm.domain.PersistentObject {
    private static final long serialVersionUID = 8782480508659630042L;

    protected java.lang.String originProcessName;

    /**
     * 
     */
    @javax.persistence.Column(name = "ORIGIN_PROCESS_NAME", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getOriginProcessName() {
        return this.originProcessName;
    }

    public void setOriginProcessName(java.lang.String pOriginProcessName) {
        this.originProcessName = pOriginProcessName;
    }

    protected java.lang.String originTypeName;

    /**
     * 
     */
    @javax.persistence.Column(name = "ORIGIN_TYPE_NAME", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getOriginTypeName() {
        return this.originTypeName;
    }

    public void setOriginTypeName(java.lang.String pOriginTypeName) {
        this.originTypeName = pOriginTypeName;
    }

    protected java.lang.String destinationProcessName;

    /**
     * 
     */
    @javax.persistence.Column(name = "DESTINATION_PROCESS_NAME", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getDestinationProcessName() {
        return this.destinationProcessName;
    }

    public void setDestinationProcessName(
            java.lang.String pDestinationProcessName) {
        this.destinationProcessName = pDestinationProcessName;
    }

    protected java.lang.String destinationTypeName;

    /**
     * 
     */
    @javax.persistence.Column(name = "DESTINATION_TYPE_NAME", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getDestinationTypeName() {
        return this.destinationTypeName;
    }

    public void setDestinationTypeName(java.lang.String pDestinationTypeName) {
        this.destinationTypeName = pDestinationTypeName;
    }

    protected java.lang.String id;

    /**
     * 
     */
    @javax.persistence.Id
    @org.hibernate.annotations.GenericGenerator(name = "UUID_GEN", strategy = "org.topcased.gpm.domain.util.UuidGenerator")
    @javax.persistence.GeneratedValue(generator = "UUID_GEN")
    @javax.persistence.Column(name = "ID", length = 50, nullable = false, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    protected java.util.Set<org.topcased.gpm.domain.mapping.FieldMap> fieldMapList =
            new java.util.LinkedHashSet<org.topcased.gpm.domain.mapping.FieldMap>();

    /**
     * 
     */
    @javax.persistence.OneToMany(cascade = { javax.persistence.CascadeType.ALL }, fetch = javax.persistence.FetchType.LAZY, targetEntity = org.topcased.gpm.domain.mapping.FieldMap.class)
    @javax.persistence.JoinColumn(name = "TYPE_MAP_FK")
    @org.hibernate.annotations.OrderBy(clause = "TYPE_MAP_FK")
    @org.hibernate.annotations.ForeignKey(name = "TYPE_MAP_FIELD_MAPS_FKC")
    @org.hibernate.annotations.Index(name = "type_map_fk_idx")
    public java.util.Set<org.topcased.gpm.domain.mapping.FieldMap> getFieldMaps() {
        return this.fieldMapList;
    }

    public void setFieldMaps(
            java.util.Set<org.topcased.gpm.domain.mapping.FieldMap> pFieldMaps) {
        this.fieldMapList = pFieldMaps;
    }

    /**
     * Add a org.topcased.gpm.domain.mapping.FieldMap.
     * 
     * @param pFieldMaps
     *            the entity to add.
     */
    public void addToFieldMapList(
            org.topcased.gpm.domain.mapping.FieldMap pFieldMaps) {
        if (this.fieldMapList == null) {
            this.fieldMapList =
                    new java.util.LinkedHashSet<org.topcased.gpm.domain.mapping.FieldMap>();
        }
        this.fieldMapList.add(pFieldMaps);
    }

    /**
     * Remove a org.topcased.gpm.domain.mapping.FieldMap.
     * 
     * @param pFieldMaps
     *            the entity to remove.
     */
    public void removeFromFieldMapList(
            org.topcased.gpm.domain.mapping.FieldMap pFieldMaps) {
        if (this.fieldMapList != null) {
            this.fieldMapList.remove(pFieldMaps);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an TypeMap instance and all
     * identifiers for this entity equal the identifiers of the argument entity.
     * Returns <code>false</code> otherwise.
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof TypeMap)) {
            return false;
        }
        final TypeMap lTypeMap = (TypeMap) pObject;
        if (this.getId() == null || lTypeMap.getId() == null
                || !lTypeMap.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers.
     * 
     * @return a hash code value for this object.
     * @see java.lang.Object#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = 0;
        if (id != null) {
            lHashCode = id.hashCode();
        }
        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.mapping.TypeMap}.
     * 
     * @return a new instance of {@link org.topcased.gpm.domain.mapping.TypeMap}
     */
    public static org.topcased.gpm.domain.mapping.TypeMap newInstance() {
        return new org.topcased.gpm.domain.mapping.TypeMap();
    }

}

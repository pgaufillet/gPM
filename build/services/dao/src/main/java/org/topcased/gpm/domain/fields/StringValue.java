/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.fields;

import javax.persistence.Transient;

import org.apache.commons.lang.StringUtils;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.DiscriminatorValue("StringValueImpl")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class StringValue extends org.topcased.gpm.domain.fields.ScalarValue {
    private static final long serialVersionUID = 3896499886751490726L;

    protected java.lang.String stringValue;

    /**
     * Max length of string that can be stored in a VARCHAR (larger strings are
     * stored in a CLOB).
     */
    public static final int MAX_VARCHAR_LENGTH = 4000;

    /**
     * 
     */
    @javax.persistence.Column(name = "STRING_VALUE", length = 4000, unique = false)
    @org.hibernate.annotations.Type(type = "java.lang.String")
    @org.hibernate.annotations.Index(name = "string_value_str_value_idx")
    public java.lang.String getStringValue() {
        return this.stringValue;
    }

    public void setStringValue(java.lang.String pStringValue) {
        this.stringValue = pStringValue;
    }

    protected java.lang.String largeStringValue;

    /**
     * 
     */
    @javax.persistence.Column(name = "LARGE_STRING_VALUE", unique = false)
    @org.hibernate.annotations.Type(type = "org.andromda.persistence.hibernate.usertypes.HibernateStringClobType")
    public java.lang.String getLargeStringValue() {
        return this.largeStringValue;
    }

    public void setLargeStringValue(java.lang.String pLargeStringValue) {
        this.largeStringValue = pLargeStringValue;
    }

    /**
     * This entity does not have any identifiers but since it extends the
     * <code>org.topcased.gpm.domain.fields.ScalarValueImpl</code> class it will
     * simply delegate the call up there.
     * 
     * @see org.topcased.gpm.domain.fields.ScalarValue#equals(Object)
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        return super.equals(pObject);
    }

    /**
     * This entity does not have any identifiers but since it extends the
     * <code>org.topcased.gpm.domain.fields.ScalarValueImpl</code> class it will
     * simply delegate the call up there.
     * 
     * @see org.topcased.gpm.domain.fields.ScalarValue#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        return super.hashCode();
    }

    /**
     * {@inheritDoc}
     * 
     * @see org.topcased.gpm.domain.fields.ScalarValueImpl#getAsString()
     */
    @Override
    @Transient
    public String getAsString() {
        if (StringUtils.isNotEmpty(getLargeStringValue())) {
            return getLargeStringValue();
        }
        else if (getStringValue() != null) {
            return getStringValue();
        }
        else {
            return StringUtils.EMPTY;
        }
    }

    /**
     * {@inheritDoc}
     * 
     * @see org.topcased.gpm.domain.fields.ScalarValueImpl#setAsString(java.lang.String)
     */
    @Override
    @Transient
    public void setAsString(String pValue) {
        if (pValue.length() > MAX_VARCHAR_LENGTH) {
            setLargeStringValue(pValue);
            setStringValue(null);
        }
        else {
            setStringValue(pValue);
            setLargeStringValue(null);
        }
    }

    /**
     * {@inheritDoc}
     * 
     * @see org.topcased.gpm.domain.fields.ScalarValue#getAsObject()
     */
    @Override
    @Transient
    public final Object getAsObject() {
        if (StringUtils.isNotEmpty(largeStringValue)) {
            return largeStringValue;
        }
        else {
            return stringValue;
        }
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.fields.StringValue}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.fields.StringValue}
     */
    public static org.topcased.gpm.domain.fields.StringValue newInstance() {
        return new org.topcased.gpm.domain.fields.StringValue();
    }

}
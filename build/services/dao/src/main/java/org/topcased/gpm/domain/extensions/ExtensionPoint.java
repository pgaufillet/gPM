/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: HibernateEntity.vsl in andromda-hibernate-cartridge.
//
package org.topcased.gpm.domain.extensions;

/**
 * @author Atos
 */

@javax.persistence.Entity
@javax.persistence.Table(name = "EXTENSION_POINT")
@javax.persistence.Inheritance(strategy = javax.persistence.InheritanceType.JOINED)
@org.hibernate.annotations.Entity(dynamicInsert = false, dynamicUpdate = false)
@org.hibernate.annotations.Cache(usage = org.hibernate.annotations.CacheConcurrencyStrategy.READ_WRITE)
public class ExtensionPoint extends
        org.topcased.gpm.domain.attributes.AttributesContainer {
    private static final long serialVersionUID = -6390895285758219816L;

    protected java.lang.String name;

    /**
     * 
     */
    @javax.persistence.Column(name = "NAME", length = 100, nullable = false, unique = false)
    @org.hibernate.annotations.Index(name = "extension_point_name_idx")
    @org.hibernate.annotations.Type(type = "java.lang.String")
    public java.lang.String getName() {
        return this.name;
    }

    public void setName(java.lang.String pName) {
        this.name = pName;
    }

    protected java.lang.String id;

    /**
     * 
     */

    protected java.util.List<org.topcased.gpm.domain.extensions.Command> commandList =
            new java.util.LinkedList<org.topcased.gpm.domain.extensions.Command>();

    /**
     * 
     */
    @javax.persistence.ManyToMany(targetEntity = org.topcased.gpm.domain.extensions.Command.class)
    @javax.persistence.JoinTable(name = "COMMANDS2EXTENSION_POINTS", joinColumns = @javax.persistence.JoinColumn(name = "EXTENSION_POINTS_FK"), inverseJoinColumns = @javax.persistence.JoinColumn(name = "COMMANDS_FK"))
    @org.hibernate.annotations.IndexColumn(name = "EXT_POINT_CMD_IDX")
    @org.hibernate.annotations.OrderBy(clause = "EXTENSION_POINTS_FK")
    @org.hibernate.annotations.ForeignKey(inverseName = "COMMAND_EXTENSION_POINTS_FKC", name = "EXTENSION_POINT_COMMANDS_FKC")
    public java.util.List<org.topcased.gpm.domain.extensions.Command> getCommands() {
        return this.commandList;
    }

    public void setCommands(
            java.util.List<org.topcased.gpm.domain.extensions.Command> pCommands) {
        this.commandList = pCommands;
    }

    /**
     * Add a org.topcased.gpm.domain.extensions.Command.
     * 
     * @param pCommands
     *            the entity to add.
     */
    public void addToCommandList(
            org.topcased.gpm.domain.extensions.Command pCommands) {
        if (this.commandList == null) {
            this.commandList =
                    new java.util.LinkedList<org.topcased.gpm.domain.extensions.Command>();
        }
        this.commandList.add(pCommands);
    }

    /**
     * Remove a org.topcased.gpm.domain.extensions.Command.
     * 
     * @param pCommands
     *            the entity to remove.
     */
    public void removeFromCommandList(
            org.topcased.gpm.domain.extensions.Command pCommands) {
        if (this.commandList != null) {
            this.commandList.remove(pCommands);
        }
    }

    /**
     * Returns <code>true</code> if the argument is an ExtensionPoint instance
     * and all identifiers for this entity equal the identifiers of the argument
     * entity. The <code>equals</code> method of the parent entity will also
     * need to return <code>true</code>. Returns <code>false</code> otherwise.
     * 
     * @param pObject
     *            the object to compare with
     * @return a boolean
     * @see org.topcased.gpm.domain.attributes.AttributesContainer#equals(Object)
     */
    @javax.persistence.Transient
    public boolean equals(Object pObject) {
        if (this == pObject) {
            return true;
        }
        if (!(pObject instanceof ExtensionPoint)) {
            return false;
        }
        final ExtensionPoint lExtensionPoint = (ExtensionPoint) pObject;
        if (this.getId() == null || lExtensionPoint.getId() == null
                || !lExtensionPoint.getId().equals(getId())) {
            return false;
        }
        return true;
    }

    /**
     * Returns a hash code based on this entity's identifiers and the hash code
     * of the parent entity.
     * 
     * @return a hash code value for this object.
     * @see org.topcased.gpm.domain.attributes.AttributesContainer#hashCode()
     */
    @javax.persistence.Transient
    public int hashCode() {
        int lHashCode = super.hashCode();
        int lId = 0;
        if (id != null) {
            lId = id.hashCode();
        }
        lHashCode = HASHCODE_CONSTANT * lHashCode + lId;

        return lHashCode;
    }

    /**
     * Constructs new instances of
     * {@link org.topcased.gpm.domain.extensions.ExtensionPoint}.
     * 
     * @return a new instance of
     *         {@link org.topcased.gpm.domain.extensions.ExtensionPoint}
     */
    public static org.topcased.gpm.domain.extensions.ExtensionPoint newInstance() {
        return new org.topcased.gpm.domain.extensions.ExtensionPoint();
    }

}
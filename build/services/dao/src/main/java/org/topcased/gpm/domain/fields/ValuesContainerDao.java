/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: SpringDao.vsl in andromda-spring-cartridge.
//
package org.topcased.gpm.domain.fields;

/**
 * @see org.topcased.gpm.domain.fields.ValuesContainer
 * @author Atos
 */
public interface ValuesContainerDao
        extends
        org.topcased.gpm.domain.IDao<org.topcased.gpm.domain.fields.ValuesContainer, java.lang.String> {
    /**
     * 
     */
    public org.topcased.gpm.domain.fields.ValuesContainer load(
            java.lang.String pId, boolean pEagerLoading);

    /**
     * 
     */
    public java.lang.Integer getVersion(java.lang.String pId);

    /**
     * <p>
     * Get the number of ValuesContainer referencing the given FieldsContainer
     * </p>
     */
    public java.lang.Long getCount(java.lang.String pFieldsContainerId);

    /**
     * <p>
     * Get all values container defined for the given type (fields container)
     * </p>
     */
    @SuppressWarnings("rawtypes")
    public java.util.List getAll(java.lang.String pFieldsContainerId);

    /**
     * <p>
     * Delete all values container belonging to the given type.
     * </p>
     */
    public java.lang.Boolean deleteContainers(
            java.lang.String pFieldsContainerId);

    /**
     * Retrieves the ValuesContainer Type Id, ValuesContainer Id given
     * 
     * @param pValuesContainerId
     *            The ValuesContainer Id
     * @return ValuesContainer type Id or null
     */
    public java.lang.String getTypeId(java.lang.String pValuesContainerId);

    /**
     * Retrieves the ValuesContainer Type Id list, ValuesContainers Ids given
     * 
     * @param pIds
     *            The ValuesContainer Ids
     * @return ValuesContainers types Ids or Empty Set
     */
    public java.util.Set<String> getTypesId(java.util.List<String> pIds);

    /**
     * 
     */
    public java.util.List<String> getLinkedElements(java.lang.String pId,
            java.lang.String pLinkTypeName);

    /**
     * 
     */
    public java.lang.Object removeSubField(java.lang.Object pSubField);

    /**
     * 
     */
    public java.util.List<String> getAllId(java.lang.String pTypeId);

    /**
     * 
     */
    public java.lang.String getIdByReference(java.lang.String pReference,
            java.lang.String pTypeName);

    /**
     * 
     */
    public java.lang.String getTypeName(java.lang.String pValuesContainerId);

    /**
     * 
     */
    public java.lang.String getFunctionalReference(
            java.lang.String pValuesContainerId);

}

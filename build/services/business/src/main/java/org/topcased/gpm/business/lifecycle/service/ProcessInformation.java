/***************************************************************
 * Copyright (c) 2007 AIRBUS FRANCE. All rights reserved. This
 * program and the accompanying materials are made available
 * under the terms of the Lesser Gnu Public License (LGPL) which
 * accompanies this distribution, and is available
 * at http://www.gnu.org/licenses/lgpl.html
 *
 ******************************************************************/
//
// Attention: Generated code! Do not modify by hand!
// Generated by: ValueObject.vsl in andromda-java-cartridge.
//
package org.topcased.gpm.business.lifecycle.service;

import java.util.HashMap;
import java.util.Map;

/**
 * @author Atos
 */
public class ProcessInformation implements java.io.Serializable {
    /**
     * 
     */
    private static final long serialVersionUID = 1L;

    /**
     * Default constructor.
     */
    public ProcessInformation() {
    }

    /**
     * Constructor taking all properties.
     */
    public ProcessInformation(final java.lang.String pCurrentState,
            final java.lang.String[] pTransitions, final java.lang.String pId) {
        this.currentState = pCurrentState;
        this.transitions = pTransitions;
        this.id = pId;
    }

    /**
     * Copies constructor from other ProcessInformation
     */
    public ProcessInformation(ProcessInformation pOtherBean) {
        if (pOtherBean != null) {
            this.currentState = pOtherBean.getCurrentState();
            this.transitions = pOtherBean.getTransitions();
            this.id = pOtherBean.getId();
        }
    }

    private java.lang.String currentState;

    /**
     * <p>
     * Name of the current state of the sheet.
     * </p>
     */
    public java.lang.String getCurrentState() {
        return this.currentState;
    }

    public void setCurrentState(java.lang.String pCurrentState) {
        this.currentState = pCurrentState;
    }

    private java.lang.String[] transitions;

    /**
     * <p>
     * List of all transitions that can be signaled on the sheet.
     * </p>
     */
    public java.lang.String[] getTransitions() {
        return this.transitions;
    }

    public void setTransitions(java.lang.String[] pTransitions) {
        this.transitions = pTransitions;
    }

    private java.lang.String id;

    /**
     * <p>
     * Identifier of the life cycle process
     * </p>
     */
    public java.lang.String getId() {
        return this.id;
    }

    public void setId(java.lang.String pId) {
        this.id = pId;
    }

    /**
     * <p>
     * Map that contains the confirmation message for each transition
     * </p>
     */
    private Map<String, String> transitionConfirmationMessages =
            new HashMap<String, String>();

    /**
     * Get the transition confirmation messages
     * 
     * @return the transition confirmation messages
     */
    public Map<String, String> getTransitionConfirmationMessages() {
        return transitionConfirmationMessages;
    }

    /**
     * Set the transition confirmation messages
     * 
     * @param the
     *            transition confirmation messages
     */
    public void setTransitionConfirmationMessages(
            Map<String, String> pTransitionConfirmationMessages) {
        this.transitionConfirmationMessages = pTransitionConfirmationMessages;
    }
}